#!/bin/bash
#$ -V
#$ -cwd
#$ -S /bin/bash
#$ -N ReadMapPman
#$ -o $JOB_NAME.o$JOB_ID
#$ -e $JOB_NAME.e$JOB_ID
#$ -q R2D2
#$ -pe fill 19 
#$ -P communitycluster

#This file will process raw Illumina data using Trimmomatic.  This will be followed by mapping to a reference genome to create a new genome assembly.

BASEDIR=/lustre/scratch/kevsulli/Mitobim
WORKDIR=$BASEDIR/Output

cd $WORKDIR

THREADS=19  #Line 9 sets this up to run 20 processors.  If you want fewer, make sure to change that line as well as this one.

#for RAW_READ_FILE in $BASEDIR/data_links/*.fastq.gz;
#do gunzip -c $BASEDIR/data_links/$RAW_READ_FILE >$RAW_READ_FILE.fastq &;	\
#done 
#wait

REFGENOME=104488_S2-aMon-mt-genome_out_AllStrains.unpadded.fasta  	# your reference genome for the assembly
REF_HOME=$BASEDIR/Genomes	#the location of your reference genome

RAW_READS_HOME=$WORKDIR/data_links   #the location of your raw data
#PROCESSED_READS_HOME=$BASEDIR/data_processed	#the location of your processed data
QUALITY_INFO=$RAW_READS_HOME/QC_files	#Where the quality stats will be saved
SUPPORT_FILES=$BASEDIR/support_files	#where the support files like the adapter sequences will be located.

######
#set up alias' for major programs
######
BWA_HOME=/lustre/work/apps/bwa-0.7.12
SAMTOOLS_HOME=/lustre/work/apps/samtools-1.2
SAMTOOLS1_8_HOME=/lustre/work/apps/samtools-0.1.18
PICARD_HOME=/lustre/work/apps/picard-tools-1.91
BCFTOOLS_HOME=/lustre/work/apps/samtools-0.1.18/bcftools
RAY_SOFTWARE=/lustre/work/daray/software
TRIM_HOME=/lustre/work/apps/Trimmomatic-0.27
FASTX_HOME=/lustre/work/apps/fastx_toolkit-0.0.14/bin
VCFTOOLS_HOME=/lustre/work/daray/software/vcftools_0.1.12b/bin
BEDTOOLS_HOME=/lustre/work/apps/bedtools-2.17.0/bin


######
#Set up insert size.  This will be specific to the insert size for your particular taxon's library.
######
#insSize=1000  

######
#make sure your genome file has no blank lines  - ALREADY DONE, NOT BEING USED HERE
######
#sed '/^$/d' $REF_HOME/$refgenome >tempGenome
#cp tempGenome $REF_HOME/$refgenome".clean"

#echo "spaces" |  mailx -s "spaces" kev.am.sullivan@gmail.com

################################################################################
# Map reads to genome with BWA
#~~~~~~~~~~~

#[1a] Use bwa to index the genome  
$BWA_HOME/bwa index \
		-a is \
		$REF_HOME/$REFGENOME
	

#######
###!!!!!!! There are comments after the "\" below.  This won't work with them present.  Make sure to get rid of anything after \ on all lines.
#######

#for RAW_READ_FILE in $RAW_READS_HOME/10448_S2_L001_R1_001.fastq
#do
	ABBREV=$(basename $RAW_READ_FILE) #This will be the name you use to process your files.  You will need to change the RP1, RP2, RU1, and RU2 slots just below here accordingly.
#done

#These files will be generated by trimmomatic
#RP1=$ABBREV"_R1_paired.fastq"
#RP2=$ABBREV"_R2_paired.fastq"
#RU1=$ABBREV"_R1_unpaired.fastq"
#RU2=$ABBREV"_R2_unpaired.fastq"


###########
#Prepare the reads and get quality stats
###########
#[1] Use trimmomatic to generate paired and unpaired reads files
#java -jar $TRIM_HOME/trimmomatic-0.27.jar \
#	PE \
#	-threads $THREADS \
#	-phred33 \
#needs string symbol	$RAW_READS_HOME/$ABBREV"_R1.fastq" \
#needs string symbol	$RAW_READS_HOME/$ABBREV"_R2.fastq" \
#needs string symbol	$PROCESSED_READS_HOME/$RP1 \
#needs string symbol	$PROCESSED_READS_HOME/$RU1 \
#needs string symbol	$PROCESSED_READS_HOME/$RP2 \
#needs string symbol	$PROCESSED_READS_HOME/$RU2 \
#	ILLUMINACLIP:$SUPPORT_FILES/TruSeq4-PE.fa:2:30:10 \
#	LEADING:20 \
#	TRAILING:20 \
#	SLIDINGWINDOW:4:20 \
#	MINLEN:33

	#[2] Generate quality stats 
	#for FASTQ in $RAW_READS_HOME/$ABBREV
		#do 	RAW_FILE=$(basename $FASTQ .fastq)

		#$FASTX_HOME/fastx_quality_stats 					\
#			-Q33		 						\
#			-o $QUALITY_INFO/$RAW_FILE".stats" 	\
#			-i $RAW_READS_HOME/$RAW_FILE".fastq"

		#$FASTX_HOME/fastx_nucleotide_distribution_graph.sh 			\
#			-i $QUALITY_INFO/$RAW_FILE".stats"		\
#			-o $QUALITY_INFO/$RAW_FILE"_NUC.png"	\
#			-t $QUALITY_INFO/$RAW_FILE"_clipped"		

		#$FASTX_HOME/fastq_quality_boxplot_graph.sh 				\
#			-i $QUALITY_INFO/$RAW_FILE".stats" 	\
#			-o $QUALITY_INFO/$RAW_FILE"_BOX.png"	\
#			-t $QUALITY_INFO/$RAW_FILE"_clipped"

	#done

#done

#echo "_qc_finished" |  mailx -s "_qc_finished" kev.am.sullivan@gmail.com

#sleep 5

################################################################################
# Map reads to genome with BWA
#~~~~~~~~~~~

#for RAW_READ_FILE in $WORKDIR/data_links/10448_S2_L001_R1_001.fastq
#do ABBREV=$(basename $RAW_READ_FILE _R1.fastq)
#echo "NOW WORKING "$ABBREV

#These files were generated by trimmomatic
#RP1=$ABBREV"_L001_R1_001.fastq"
#RP2=$ABBREV"_L001_R2_001.fastq"

		
#===================
# [1b] Map the reads to the genome
	$BWA_HOME/bwa mem 			\
	-M	\
		$REF_HOME/$REFGENOME			\
       		$RAW_READS_HOME/104488_S2_L001_R1_001.fastq	\
       		$RAW_READS_HOME/104488_S2_L001_R2_001.fastq	\
	-t $THREADS	\
	> 104488_S2_aln-pe.sam 	
		
						
echo $ABBREV"_R1&2_map" |  mailx -s $ABBREV"_R1&2_map" kev.am.sullivan@gmail.com	

#	$BWA_HOME/bwa mem 			\
#	-M	\
#	$REF_HOME/$REFGENOME			\
#       	$RAW_READS_HOME/$ABBREV"_RX_cat.fastq"	\
#	-t $THREADS	\
#	> $ABBREV"_aln-se.sam" 	

#echo $ABBREV"_RX_map" |  mailx -s $ABBREV"_RX_map" kev.am.sullivan@gmail.com	
	
#===================
# [2] calculate the max insertion size
#	maxInsSize=insSize*2  
	
#===================
# [3] use sampe and SAMtools to create bam files of the mapped reads
#create sam file from paired mapped reads
	$BWA_HOME/bwa sampe 				\
	#-f $ABBREV"_SAMPE.sam" 	\
		$REF_HOME/$REFGENOME 				\
		104488_S2_aln-pe.sam 		\
		104488_S2_L001_R1_001.fastq			\
		104488_S2_L001_R2_001.fastq			
		
#create sam file from unpaired mapped reads
#string	$BWA_HOME/bwa samse 				\
#string		$REF_HOME/$REFGENOME 	\
#string		$ABBREV"_RX.sai" 		\
#string		$PROCESSED_READS_HOME/$ABBREV"_RX_cat.fastq"	\
#		>$ABBREV"_RX_SAMSE.sam"	\

#convert paired sam file to bam
	$SAMTOOLS_HOME/samtools view 			\
		-Sb 					\
		-o 104488_S2_aln-pe.bam 	\
		104488_S2_aln-pe.sam 		

#convert unpaired sam file to bam
	#$SAMTOOLS_HOME/samtools view 			\
		#-Sb 					\
		#-o $ABBREV"_aln-se.bam" 	\
		#$ABBREV"_aln-se.sam" 		

#merge the paired and unpaired mapped reads to a single bam file
	#$SAMTOOLS_HOME/samtools merge	\
		#$ABBREV"_merge.bam" \
		#$ABBREV"_aln-pe.bam"	\
		#$ABBREV"_aln-se.bam"	

#Not sure what this does - sort bam file?
	$SAMTOOLS_HOME/samtools view 			\
#		-F 4 					\
		-q 20 					\
		-b						\
		-o 104488_S2_R3.bam 	\
		104488_S2_aln-pe.bam  

#### for samtools v1.19		
##---	$SAMTOOLS_HOME/samtools sort 			\
#		$ABBREV"_R3.bam"	\
#		-@ $THREADS 		\
#		$ABBREV"_R3_sorted"

#### for samtools v1.2		
	$SAMTOOLS_HOME/samtools sort 			\
		-o 104488_S2_R3_sorted.bam	\
		-O bam	\
		-T 104488_S2_sorted \
		-@ $THREADS 					\
		104488_S2_aln-pe.bam 		

echo $ABBREV"_RX_sort" |  mailx -s $ABBREV"_RX_sort" kev.am.sullivan@gmail.com	
		
#===================
# [4] remove sequencing duplicates from the sorted bam file w/ PICARD	
	java 						\
        -Xmx24g 				\
		-Djava.io.tmpdir=tmp 			\
		-jar $PICARD_HOME/MarkDuplicates.jar 	\
        	I=104488_S2_R3_sorted.bam 	\
       		O=104488_S2_R3_noDup.bam	\
        	M=104488_S2_R3_dupMetric.out 	\
        	REMOVE_DUPLICATES=true 			\
		MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=100 	\
		VALIDATION_STRINGENCY=SILENT 		\
		ASSUME_SORTED=TRUE 			\
		TMP_DIR=tmp

#==================
#[5] create pileup from noDup.bam

$SAMTOOLS1_8_HOME/samtools mpileup \
	-C50 \
	-f $REF_HOME/$REFGENOME \
	104488_S2_R3_noDup.bam \
	>104488_S2_mPileUp_0_1_18.vcf
	
--echo 104488_S2_pileup_finished |  mailx -s $ABBREV"_pileup_finished" kev.am.sullivan@gmail.com

	
#=======================	
#[6] generate fasta consensus from pileup

perl $RAY_SOFTWARE/pileup2fasta_v1-4.pl \
	-i 104488_S2_mPileUp_0_1_18.vcf \
	-o 104488_S2__masked.fa	\
	-g 104488_S2__masked.gff	\
	-b 8	\
	-s		\
	-V		

$SAMTOOLS_HOME/samtools index \
	-b \
	104488_S2_R3_noDup.bam 	

$BEDTOOLS_HOME/bedtools genomecov \
	-ibam 104488_S2_R3_noDup.bam \
	-g 104488_S2__masked.fa \
	| grep genome >104488_S2_genome_cov.txt 


echo 104488_S2_fasta_finished" |  mailx -s $ABBREV"_fasta_finished" kev.am.sullivan@gmail.com


	
echo 104488_S2_assembly_finished" |  mailx -s $ABBREV"_assembly_finished" kev.am.sullivan@gmail.com

done
sleep 5

